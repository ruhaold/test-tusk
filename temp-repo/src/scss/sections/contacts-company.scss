@use 'sass:map';
@use 'src/scss/base' as *;

.contacts-company {
  $fs-contacts-company: (
    sm: 12,
    md: 12,
    lg: 12,
    xl: 18);
  $gap-contacts-company: (
    sm: 42,
    md: 32,
    lg: 44,
    xl: 64);
  $padding-x-contacts: (
    sm: 30,
    md: 40,
    lg: 80,
    xl: 120);

  display: flex;
  flex-direction: column;
  align-self: self-end;
  grid-column: 1/2;
  grid-row: 3/4;
  width: 100%;
  font-size: em(map.get($fs-contacts-company, 'sm'), map.get($fs-base, 'sm'));
  gap: em(map.get($gap-contacts-company, 'sm'), map.get($fs-contacts-company, 'sm'));
  padding-top: em(50, map.get($fs-contacts-company, 'sm'));

  @each $key in $medias {
    @include up($key) {
      font-size: em(map.get($fs-contacts-company, $key), map.get($fs-base, $key));
      gap: em(map.get($gap-contacts-company, $key), map.get($fs-contacts-company, $key));
    }
  }

  @include up('lg') {
    grid-column: 1/2;
    grid-row: 2/3;
    padding-top: 0;
  }

  .company-branches {
    $gap-company-branches: (
      sm: 50,
      md: 140,
      lg: 83.67,
      xl: 126);

    display: flex;
    gap: em(map.get($gap-company-branches, 'sm'), map.get($fs-contacts-company, 'sm'));
    padding-left: em(map.get($padding-x-contacts, 'sm'), map.get($fs-contacts-company, 'sm'));
    padding-right: em(map.get($padding-x-contacts, 'sm'), map.get($fs-contacts-company, 'sm'));

    @each $key, $value in $gap-company-branches {
      @include up($key) {
        gap: em($value, map.get($fs-contacts-company, $key));
        padding-left: em(map.get($padding-x-contacts, $key), map.get($fs-contacts-company, $key));
        padding-right: em(map.get($padding-x-contacts, $key), map.get($fs-contacts-company, $key));
      }
    }
  }

  .company-data {
    $gap-company-branch: (
      sm: 11,
      md: 11,
      lg: 10.89,
      xl: 15);

    display: flex;
    flex-direction: column;
    gap: em(map.get($gap-company-branch, 'sm'), map.get($fs-contacts-company, 'sm'));

    @each $key, $value in $gap-company-branch {
      @include up($key) {
        gap: em($value, map.get($fs-contacts-company, $key));
      }
    }
  }

  &__text {
    opacity: 0.5;
  }

  .company-head-office {
    $width-company-head-office: (
      lg: 407,
      xl: 611);

    width: 100%;
    max-width: none;

    @each $key, $value in $width-company-head-office {
      @include up($key) {
        //max-width: em($value, map.get($fs-contacts-company, $key));
      }
    }

    $medias: md, lg, xl;
    @each $key in $medias {
      @include up($key) {
        padding-left: em(map.get($padding-x-contacts, $key), map.get($fs-contacts-company, $key));
        padding-right: em(map.get($padding-x-contacts, $key), map.get($fs-contacts-company, $key));
      }
    }

    &__bg {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      opacity: 0.05;
      background-color: $color-base;
      border-radius: inherit;
    }

    &__content {
      $padding-y-company-head-office: (
        sm: 22.5,
        md: 22.5,
        lg: 22.81,
        xl: 33);
      $padding-r-company-head-office: (
        sm: 30,
        md: 29,
        lg: 22,
        xl: 33);
      $padding-l-company-head-office: (
        sm: 30,
        md: 30,
        lg: 26,
        xl: 39);
      $gap-content: (
        sm: 48,
        md: 48,
        lg: 50.38,
        xl: 73);

      position: relative;
      display: flex;
      flex-direction: column;
      padding:
        em(map.get($padding-y-company-head-office, 'sm'), map.get($fs-contacts-company, 'sm'))
        em(map.get($padding-r-company-head-office, 'sm'), map.get($fs-contacts-company, 'sm'))
        em(map.get($padding-y-company-head-office, 'sm'), map.get($fs-contacts-company, 'sm'))
        em(map.get($padding-l-company-head-office, 'sm'), map.get($fs-contacts-company, 'sm'));
      gap: em(map.get($gap-content, 'sm'), map.get($fs-contacts-company, 'sm'));

      @each $key in $medias {
        @include up($key) {
          padding: em(map.get($padding-y-company-head-office, $key), map.get($fs-contacts-company, $key)) em(map.get($padding-r-company-head-office, $key), map.get($fs-contacts-company, $key)) em(map.get($padding-y-company-head-office, $key), map.get($fs-contacts-company, $key)) em(map.get($padding-l-company-head-office, $key), map.get($fs-contacts-company, $key));
          gap: em(map.get($gap-content, $key), map.get($fs-contacts-company, $key));

        }
      }
      $medias: md, lg, xl;
      @each $key in $medias {
        @include up($key) {
          border-radius: em(16, map.get($fs-contacts-company, $key));
        }
      }
    }

    &__data {
      display: flex;
      flex-direction: column;
    }

    &__footer {
      $gap-footer: (
        sm: 48,
        md: 48,
        lg: 50.38,
        xl: 73);

      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: em(27, map.get($fs-contacts-company, 'sm'));


      @include up('md') {
        gap: normal;
      }

    }

    &__info {
      $gap-info: (
        sm: 20,
        md: 20,
        lg: 21,
        xl: 29);

      display: flex;
      flex-direction: column;
      gap: em(map.get($gap-info, 'sm'), map.get($fs-contacts-company, 'sm'));

      @each $key in $medias {
        @include up($key) {
          gap: em(map.get($gap-info, $key), map.get($fs-contacts-company, $key));
        }
      }

    }

    $fs-site: (
      sm: 15,
      md: 15,
      lg: 15.33,
      xl: 23);
    $width-icon:(
      sm: 9,
      md: 9,
      lg: 9,
      xl: 14);
    $height-icon:(
      sm: 9,
      md: 9,
      lg: 10,
      xl: 14);

    &__site {
      display: flex;
      align-items: center;
      font-size: em(map.get($fs-site, 'sm'), map.get($fs-contacts-company, 'sm'));
      gap: em(5, map.get($fs-site, 'sm'));

      @each $key, $value in $fs-site {
        @include up($key) {
          font-size: em($value, map.get($fs-contacts-company, $key));
        }
      }

      @include up('xl') {
        gap: em(7, map.get($fs-site, 'xl'));
      }

      @include hover() {
        .link,
        .company-head-office__icon {
          color: $color-secondary;

          @include transition(color);
        }
      }
    }

    &__link {
      padding-right: em((10 + map.get($width-icon, 'sm')), map.get($fs-site, 'sm'));

      @each $key in $medias {
        @include up($key) {
          padding-right: em((10 + map.get($width-icon, $key)), map.get($fs-site, $key));
        }
      }
    }

    &__icon {
      width: em(map.get($width-icon, 'sm'), map.get($fs-site, 'sm'));
      height: em(map.get($width-icon, 'sm'), map.get($fs-site, 'sm'));
      margin-left: calc(-1 * em(map.get($width-icon, 'sm'), map.get($fs-site, 'sm')));

      @each $key in $medias {
        @include up($key) {
          width: em(map.get($width-icon, $key), map.get($fs-site, $key));
          height: em(map.get($width-icon, $key), map.get($fs-site, $key));
          margin-left: calc(-1 * em(map.get($width-icon, $key), map.get($fs-site, $key)));
        }
      }
    }

    &__logo {
      $size-logo: (
        sm: 59,
        md: 59,
        lg: 60,
        xl: 90);

      width: em(map.get($size-logo, 'sm'), map.get($fs-contacts-company, 'sm'));
      height: em(map.get($size-logo, 'sm'), map.get($fs-contacts-company, 'sm'));

      @each $key, $value in $size-logo {
        @include up($key) {
          width: em($value, map.get($fs-contacts-company, $key));
          height: em($value, map.get($fs-contacts-company, $key));
        }
      }
    }
  }

}
