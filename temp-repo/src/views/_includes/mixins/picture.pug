// [{ minWidth: String, url: String,alt: String, lazy?: Boolean}, {}]
mixin picture(options)
  if options
      picture(class=options.picClass)
        each option in options.source
          if option.minWidth
            -  const url = `${option.url}.${option.type} 1x, ${option.url}.${option.type} 2x`;
            -  const type =  `image/${option.type}` || undefined;
            - const media = option.minWidth < 1 ? `(min-width: ${option.minWidth}px)` : `(max-width: 359px)`
            -  const width = (option.width && option.unitsSize) ? option.width + option.unitsSize : option.wholeArea ? '100%' : undefined;
            -  const height = (option.height && option.unitsSize) ? option.height + option.unitsSize : option.wholeArea ? 'auto' : undefined;
              
              source(
                src=`${option.url}.${option.type}`
                srcset=url
                type=type
                media=media
                width=width
                height=height
              )
         
          if option.lazy
            -  const url = `${option.url}.${option.type}`;
            -  const alt = `${option.alt}`;
            -  const width = (option.width && option.unitsSize) ? option.width + option.unitsSize : option.wholeArea ? '100%' : undefined;
            -  const height = (option.height && option.unitsSize) ? option.height + option.unitsSize : option.wholeArea ? 'auto' : undefined;
              img(
                src=url
                alt=alt
                loading="lazy"
                width=width
                height=height
              )&attributes(attributes)
          
