@use 'src/scss/base' as *;

.btn-common {
  $root: &;

  @mixin contacts-form($includeMedia: true) {
    height: auto;
    width: 100%;
    border-radius: 1rem;
    font-size: inherit;
    font-weight: inherit;
    padding: 1.7rem 1.7rem 1.85rem;
    grid-gap: 1rem;
    border: 2px solid transparent;

    @include up(lg) {
      min-width: 20.7rem;;
    }

    svg {
      width: 2.6rem;
      height: 2.6rem;
    }
  }

  width: fit-content;
  font-style: normal;
  font-weight: 700;
  line-height: 1;
  text-align: center;
  @include transition(all);

  &__content {
    display: flex;
    align-items: center;
    justify-content: center;
    @include transition(all);
  }

  svg {
    object-fit: contain;
    flex-shrink: 0;
  }

  * {
    //@include transition(opacity);
  }

  span {
    padding-top: 0.3rem;
  }

  &:disabled,
  &._disabled {
    cursor: not-allowed !important;
  }

  &._contacts-form {
    @include contacts-form;

    @each $media in $medias {
      &-#{$media} {
        @include only($media) {
          @include contacts-form(false);
        }
      }
    }
  }

  &._rounded {
    padding: 0 !important;
    border-radius: 50% !important;
  }

  &._primary {
    background: var(--button-state-bg04);
    color: var(--control-default-bg01);

    @include hover {
      background: var(--button-state-bg03);
      color: var(--control-default-bg01);
    }

    &:active {
      background: var(--button-state-bg07);
      color: var(--control-default-bg01);
    }

    &:disabled,
    &._disabled {
      background: var(--button-state-bg04);
      color: var(--control-default-bg01);

      > * {
        opacity: 0.2;
      }
    }
  }

  &._bordered {
    --button-border-radius: 1rem;
    --button-bg: transparent;
    --button-stroke: var(--button-state-bg04);
    --button-stroke-width: 2px;
    --button-text: var(--button-state-bg04);
    --button-bg-hover: var(--button-state-bg03);
    --button-stroke-hover: var(--button-state-bg03);
    --button-stroke-width-hover: 2px;
    --button-text-hover: var(--control-default-bg01);
    --button-filler: var(--button-state-bg03);

    cursor: pointer;
    -moz-appearance: none;
    -webkit-appearance: none;
    border-width: var(--button-stroke-width);
    border-color: var(--button-stroke);
    border-style: solid;
    color: var(--button-text);
    background: var(--button-bg);
    border-radius: var(--button-border-radius);
    font-family: inherit;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;

    &:focus,
    &.btn-common--hover {
      outline: none;
      border-width: var(--button-stroke-width-hover);
      border-color: var(--button-stroke-hover);
      color: var(--button-text-hover);
      opacity: 1;
    }

    .btn-common__filler {
      background: var(--button-filler);
      position: absolute;
      width: 150%;
      height: 200%;
      border-radius: 50%;
      top: -50%;
      left: -25%;
      transform: translate3d(0,75%,0);
    }

    .btn-common__text,
    .btn-common__content {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
    }

    &:disabled,
    &._disabled {
      background: var(--control-default-bg01);
      color: var(--button-state-bg04);
      border-color: var(--button-state-bg04);
      opacity: 0.2;
    }
  }

  &._mobile-wide {
    width: 100%;

    @include up(lg) {
      width: fit-content;
    }
  }

  &._contentpage {
    margin-top: 2.4rem;

    @include up(xl) {
      margin-top: 3.2rem;
    }
  }

  &-dscrp {
    display: block;
    width: 100%;
    text-align: center;
    font-size: 1.4rem;
    line-height: 1.4;
    color: inherit;

    @include up(md) {
      font-size: 1.3rem;
    }
    @include up(xl) {
      font-size: 1.6rem;
    }

    &._margin-top {
      margin-top: 1.2rem;

      @include up(xl) {
        margin-top: 1.6rem;
      }
    }

    &._md-align-left {
      @include up(md) {
        text-align: left;
      }
    }
  }

  &._wide {
    width: 100%;
  }

  &._hidden {
    opacity: 0;
    visibility: hidden;
  }

  &._loaded *:not(.vue-loader) {
    opacity: 0 !important;
  }
}
