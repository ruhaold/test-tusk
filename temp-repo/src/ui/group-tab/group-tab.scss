@use 'src/scss/base' as *;
@use 'sass:map';

.group-tab-common {
  $root: &;

  @mixin together {
    border-radius: 0;

  }
  &.together {
    #{$root}__inner {
      gap: 0;

      #{$root}__item {
        border-left-width: 1px;
        border-right-width: 1px;
      }

      & > div:first-child  {
        #{$root}__item {
          border-left-width: 2px;
          border-right-width: 1px;
          border-bottom-left-radius: 0.8rem;
          border-top-left-radius: 0.8rem;
        }
      }

      & > div:last-child > {
        #{$root}__item {
          border-right-width: 2px;
          border-bottom-right-radius: 0.8rem;
          border-top-right-radius: 0.8rem;
        }
      }
    }
  }

  overflow-x: auto;

  @include hover-mouse-only {
    @include webkit-scrollbar();
  }

  &._in-search {
    @include up(lg) {
      overflow-y: initial;
    }
  }

  &:not(._in-search) {
    @include up(md) {
      overflow-y: initial;
    }
  }

  &__inner {
    font-size: inherit;
    display: flex;
    gap: em(8, 14);

    @include up('lg') {
      gap: em(8, 20);
    }

    @include up('xl') {
      gap: em(8, 20);
    }

    #{$root}._in-search & {
      @include up(lg) {
        flex-wrap: wrap;
        width: fit-content;
      }

      #{$root}__item {
        @include up(lg) {
          white-space: initial;
        }
      }
    }

    #{$root}:not(._in-search) & {
      @include up(lg) {
        flex-wrap: wrap;
        width: fit-content;
      }

      #{$root}__item {
        @include up(lg) {
          white-space: initial;
        }
      }
    }

    input {
      position: absolute;
      opacity: 0;
      appearance: none;

      @include focus {
        & ~ #{$root}__item {
          background: var(--button-state-bg06);
          color: var(--button-state-typo06);

          svg,
          span {
            opacity: 0.6;
          }
        }
      }
    }
  }

  &__item-count {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 5rem;
    width: fit-content;
    font-weight: 400;
    line-height: 1;
    flex-shrink: 0;
    color: var(--typography-invert-primary);
    background: var(--button-surface-typo-surface);
    padding: 0.4rem 0.6rem 0;
    @include transition(all);
  }

  &__item {
    color: var(--button-default-typo02);
    font-style: normal;
    font-size: inherit;
    font-weight: 400;
    padding: em(11, 14) em(32, 14);
    line-height: 1.3;
    border-radius: em(16, 14);
    border: 2px solid var(--button-default-dark-bg02);
    background: transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    width: fit-content;
    flex-shrink: 0;
    white-space: nowrap;
    cursor: pointer;
    user-select: none;
    @include transition(all);

    @include up('sm') {
      padding: em(11, 14) em(32, 14);
      border-radius: em(12, 14);
    }

    @include up('md') {
      padding: em(11, 14) em(31, 14);
    }

    @include up('lg') {
      padding: em(12, 20) em(32, 20);
      border-radius: em(10.5, 20);
    }

    @include up('xl') {
      padding: em(18, 20) em(47, 20) em(14, 20);
      border-radius: em(16, 20);
    }

    #{$root}._contrast-inactive-tabs & {
      @include alt-color-light {
        color: var(--button-default-typo01);

        span,
        svg {
          opacity: 1 !important;
        }
      }
    }

    svg,
    span {
      @include transition(opacity);
    }

    span {
      padding-top: 0.3rem;
    }

    svg {
      flex-shrink: 0;
    }

    &._active,
    #{$root} input:checked ~ & {
      background: var(--button-state-bg04);
      border-color: var(--button-state-bg04);
      color: var(--button-default-bg02);
      cursor: default;

      #{$root}__item-count {
        background: var(--button-default-bg03);

        @include alt-color-dark {
          color: var(--button-default-dark-typo01);
        }
      }
    }

    @include focus;

    &:not(._active, :disabled, label),
    #{$root} input:not(:checked, :disabled) ~ & {
      @include hover {
        background: var(--button-state-bg06);
        color: var(--button-state-typo06);

        svg,
        span {
          @include alt-color-light {
            opacity: 0.6;
          }
        }
      }
    }

    &:disabled,
    #{$root} input:disabled ~ & {
      cursor: not-allowed;
    }

    &._together {
      @include together;

      @each $media in $medias {
        &-#{$media} {
          @include only($media) {
            @include together;
          }
        }
      }
    }
  }

  &._flex-wrap {
    overflow-y: initial;

    #{$root}__inner {
      flex-wrap: wrap;
      width: fit-content;
    }

    #{$root}__item {
      white-space: initial;
    }
  }

  &.pb {
    &--sm {
      padding-bottom: 1rem;

      @include up('lg') {
        padding-bottom: 0;
      }
    }

  }
}
